{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\nimport React from 'react';\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\n/* @jsxFrag mdx.Fragment */\n\nimport withLayout from 'nextra-theme-blog';\nimport { withSSG } from 'nextra/ssg';\nimport layoutConfig from '/media/mayukh/Data/storage/repositories/repos/Mayukhdeb.github.io/theme.config.js';\n\nconst MDXLayout = function NextraPage(props) {\n  return withSSG(withLayout({\n    filename: \"projects.mdx\",\n    route: \"/projects\",\n    meta: {\n      \"type\": \"page\",\n      \"title\": \"üßô‚Äç‚ôÇÔ∏èprojects\",\n      \"date\": \"2021-5-25\"\n    },\n    pageMap: [{\n      \"name\": \"_app\",\n      \"route\": \"/_app\"\n    }, {\n      \"name\": \"_document\",\n      \"route\": \"/_document\"\n    }, {\n      \"name\": \"index\",\n      \"route\": \"/\",\n      \"frontMatter\": {\n        \"type\": \"page\",\n        \"title\": \"üè†mayukhdeb\",\n        \"date\": \"2021-5-25\"\n      }\n    }, {\n      \"name\": \"projects\",\n      \"route\": \"/projects\",\n      \"frontMatter\": {\n        \"type\": \"page\",\n        \"title\": \"üßô‚Äç‚ôÇÔ∏èprojects\",\n        \"date\": \"2021-5-25\"\n      }\n    }, {\n      \"name\": \"tags\",\n      \"children\": [{\n        \"name\": \"[tag]\",\n        \"route\": \"/tags/[tag]\",\n        \"frontMatter\": {\n          \"type\": \"tag\",\n          \"title\": \"Tagged Posts\"\n        }\n      }],\n      \"route\": \"/tags\"\n    }]\n  }, layoutConfig))(props);\n};\n\nfunction MDXContent(_ref) {\n  let {\n    components\n  } = _ref,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _objectSpread({\n    components: components\n  }, props), mdx(\"h1\", null, \"üßô‚Äç‚ôÇÔ∏è Projects\"), mdx(\"p\", null, \"Most of them were made for fun, but a few of them eventually ended up being useful to me and a few other people.\"), mdx(\"p\", null, \"Even though all I like all of the projects I've made, I've ordered them based on their relevance to my current goals:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    href: \"https://github.com/Mayukhdeb/torch-dreams\",\n    parentName: \"li\"\n  }, \"torch-dreams\"), \" + \", mdx(\"a\", {\n    href: \"https://github.com/Mayukhdeb/rover\",\n    parentName: \"li\"\n  }, \"rover\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    href: \"https://github.com/DevoLearn/devolearn\",\n    parentName: \"li\"\n  }, \"devolearn\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    href: \"https://github.com/Mayukhdeb/differentiable-morphogenesis\",\n    parentName: \"li\"\n  }, \"differentiable-morphogenesis\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    href: \"https://github.com/Mayukhdeb/RAFT-opticalflow-runwayML\",\n    parentName: \"li\"\n  }, \"RAFT-opticalflow-runwayML\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    href: \"https://github.com/Mayukhdeb/patrick\",\n    parentName: \"li\"\n  }, \"patrick\"))), mdx(\"p\", null, \"Hackathon projects:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    href: \"https://devpost.com/software/student-sight\",\n    parentName: \"li\"\n  }, \"student-sight\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    href: \"https://github.com/sanjay-thiyagarajan/AgroAssist\",\n    parentName: \"li\"\n  }, \"AgroAssist\"))), mdx(\"p\", null, \"Older, more rudimentary projects:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    href: \"https://github.com/Mayukhdeb/mind_the_bend\",\n    parentName: \"li\"\n  }, \"mind_the_bend\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    href: \"https://github.com/Mayukhdeb/deep-chicken-terminator\",\n    parentName: \"li\"\n  }, \"deep-chicken-terminator\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    href: \"https://github.com/Mayukhdeb/deep-chicken-saviour\",\n    parentName: \"li\"\n  }, \"deep-chicken-saviour\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    href: \"https://github.com/Mayukhdeb/gradient-games\",\n    parentName: \"li\"\n  }, \"gradient-games\"))), mdx(\"p\", null, \"Since you made it this far, here's a tree I made on matplotlib on a loss landscape:\"), mdx(\"img\", {\n    src: \"https://github.com/Mayukhdeb/loss_landscape/raw/master/images/iris_encoder_trees.png\",\n    alt: \"Image alt\"\n  }));\n}\n\nMDXContent.isMDXComponent = true;\nexport default MDXContent;","map":null,"metadata":{},"sourceType":"module"}